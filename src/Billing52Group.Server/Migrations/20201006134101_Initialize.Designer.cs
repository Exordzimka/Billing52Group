// <auto-generated />
using System;
using Billing52Group.Server.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Billing52Group.Server.Migrations
{
    [DbContext(typeof(Billing52GroupContext))]
    [Migration("20201006134101_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Billing52Group.Server.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<int?>("Contractgroupid")
                        .HasColumnName("contractgroupid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date1")
                        .HasColumnName("date1")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date2")
                        .HasColumnName("date2")
                        .HasColumnType("date");

                    b.Property<sbyte>("Fc")
                        .HasColumnName("fc")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.HasIndex("Contractgroupid")
                        .HasName("FKgroup1_idx");

                    b.ToTable("contract");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractAccount", b =>
                {
                    b.Property<int>("Yy")
                        .HasColumnName("yy")
                        .HasColumnType("int");

                    b.Property<bool>("Mm")
                        .HasColumnName("mm")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<double>("Summa")
                        .HasColumnName("summa")
                        .HasColumnType("double");

                    b.HasKey("Yy", "Mm", "Contractid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex("Contractid")
                        .HasName("FKcontract7_idx");

                    b.ToTable("contractaccount");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractBalance", b =>
                {
                    b.Property<int>("Yy")
                        .HasColumnName("yy")
                        .HasColumnType("int");

                    b.Property<bool>("Mm")
                        .HasColumnName("mm")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<double>("Summa")
                        .HasColumnName("summa")
                        .HasColumnType("double");

                    b.HasKey("Yy", "Mm", "Contractid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex("Contractid")
                        .HasName("FKcontract3_idx");

                    b.ToTable("contractbalance");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<double>("Summa")
                        .HasColumnName("summa")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Contractid")
                        .HasName("FKcontract2_idx");

                    b.ToTable("contractcharge");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("contractgroup");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractLimit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<int>("Limitid")
                        .HasColumnName("limitid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("Contractid")
                        .HasName("FKcontract9_idx");

                    b.HasIndex("Limitid")
                        .HasName("FKlimit1_idx");

                    b.ToTable("contractlimit");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractModule", b =>
                {
                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<int>("Moduleid")
                        .HasColumnName("moduleid")
                        .HasColumnType("int");

                    b.HasKey("Contractid", "Moduleid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("Moduleid")
                        .HasName("FKmodule1_idx");

                    b.ToTable("contractmodule");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnName("contractId")
                        .HasColumnType("int");

                    b.Property<int>("ParamId")
                        .HasColumnName("paramId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("varchar(125)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.HasIndex("ContractId")
                        .HasName("FKcontract10_idx");

                    b.HasIndex("ParamId")
                        .HasName("FKparams1_idx");

                    b.ToTable("contractparams");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<int>("Paymentid")
                        .HasColumnName("paymentid")
                        .HasColumnType("int");

                    b.Property<double>("Summa")
                        .HasColumnName("summa")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Contractid")
                        .HasName("FKcontract4_idx");

                    b.HasIndex("Paymentid")
                        .HasName("FKpayment1_idx");

                    b.ToTable("contractpayment");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date1")
                        .HasColumnName("date1")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date2")
                        .HasColumnName("date2")
                        .HasColumnType("date");

                    b.Property<int>("Serviceid")
                        .HasColumnName("serviceid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Contractid")
                        .HasName("FKcontract6_idx");

                    b.HasIndex("Serviceid")
                        .HasName("FKservice1_idx");

                    b.ToTable("contractservice");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("date");

                    b.Property<int>("Statusid")
                        .HasColumnName("statusid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Contractid")
                        .HasName("FKcontract8_idx");

                    b.HasIndex("Statusid")
                        .HasName("FKstatus1_idx");

                    b.ToTable("contractstatus");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<int>("Contractid")
                        .HasColumnName("contractid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date1")
                        .HasColumnName("date1")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date2")
                        .HasColumnName("date2")
                        .HasColumnType("date");

                    b.Property<int>("Tariffplanid")
                        .HasColumnName("tariffplanid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Contractid")
                        .HasName("FKcontract5_idx");

                    b.HasIndex("Tariffplanid")
                        .HasName("FKtariff1_idx");

                    b.ToTable("contracttariff");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Limit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Limit1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("limit")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'0'")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("limit");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("module");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Parameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("parameters");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<double>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("double");

                    b.Property<int>("Moduleid")
                        .HasColumnName("moduleid")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.HasIndex("Moduleid")
                        .HasName("FKmodule3_idx");

                    b.ToTable("service");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("status");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.TariffGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.ToTable("tariffgroup");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.TariffPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<double?>("Cost")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cost")
                        .HasColumnType("double")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("Tariffgroupid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tariffgroupid")
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "latin1")
                        .HasAnnotation("MySql:Collation", "latin1_swedish_ci");

                    b.HasKey("Id");

                    b.HasIndex("Tariffgroupid")
                        .HasName("FKmodule1_idx");

                    b.ToTable("tariffplan");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.User", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<bool>("Admin")
                        .HasColumnName("admin")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Login", "Password")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("user");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Contract", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.ContractGroup", "ContractGroup")
                        .WithMany("Contract")
                        .HasForeignKey("Contractgroupid")
                        .HasConstraintName("FKgroup1");
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractAccount", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractaccount")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract7")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractBalance", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractbalance")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract3")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractCharge", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractcharge")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract2")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractLimit", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractlimit")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract9")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.Limit", "Limit")
                        .WithMany("Contractlimit")
                        .HasForeignKey("Limitid")
                        .HasConstraintName("FKlimit1")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractModule", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractmodule")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract1")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.Module", "Module")
                        .WithMany("Contractmodule")
                        .HasForeignKey("Moduleid")
                        .HasConstraintName("FKmodule2")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractParams", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractparams")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FKcontract10")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.Parameters", "Param")
                        .WithMany("Contractparams")
                        .HasForeignKey("ParamId")
                        .HasConstraintName("FKparams1")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractPayment", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractpayment")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract4")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.Payment", "Payment")
                        .WithMany("Contractpayment")
                        .HasForeignKey("Paymentid")
                        .HasConstraintName("FKpayment1")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractService", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractservice")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract6")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.Service", "Service")
                        .WithMany("Contractservice")
                        .HasForeignKey("Serviceid")
                        .HasConstraintName("FKservice1")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractStatus", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contractstatus")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract8")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.Status", "Status")
                        .WithMany("Contractstatus")
                        .HasForeignKey("Statusid")
                        .HasConstraintName("FKstatus1")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.ContractTariff", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Contract", "Contract")
                        .WithMany("Contracttariff")
                        .HasForeignKey("Contractid")
                        .HasConstraintName("FKcontract5")
                        .IsRequired();

                    b.HasOne("Billing52Group.Server.Models.TariffPlan", "TariffPlan")
                        .WithMany("Contracttariff")
                        .HasForeignKey("Tariffplanid")
                        .HasConstraintName("FKtariff1")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.Service", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.Module", "Module")
                        .WithMany("Service")
                        .HasForeignKey("Moduleid")
                        .HasConstraintName("FKmodule3")
                        .IsRequired();
                });

            modelBuilder.Entity("Billing52Group.Server.Models.TariffPlan", b =>
                {
                    b.HasOne("Billing52Group.Server.Models.TariffGroup", "TariffGroup")
                        .WithMany("Tariffplan")
                        .HasForeignKey("Tariffgroupid")
                        .HasConstraintName("FKmodule1");
                });
#pragma warning restore 612, 618
        }
    }
}
